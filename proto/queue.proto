syntax = "proto3";

package queue;

import "github.com/protocolbuffers/protobuf/src/google/protobuf/any.proto";

option go_package = "github.com/brotherlogic/queue/proto";

message Config {
    repeated string queues = 1;
}

message Queue {
    // Name of the queue
    string name = 1;

    // The endpoint that will be called
    string endpoint = 2;

    // Deadline to be applied to any call
    int32 deadline = 3;

    // The actual queue entries
    repeated Entry entries = 4;

    // The type for the request
    string type = 5;

    // Max queue length
    int32 max_length = 6;
}

message Entry {
    string key = 1;

    google.protobuf.Any payload = 2;

    int64 run_time = 3;
}

message AddQueueRequest {
    string name = 1;
    string endpoint = 2;
    int32 deadline = 3;
    string type = 4;
}

message AddQueueResponse {}

message AddQueueItemRequest {
    string queue_name = 1;
    string key = 2;
    google.protobuf.Any payload = 3;
    int64 run_time = 4;
}

message AddQueueItemResponse {}

message DeleteQueueItemRequest {
    string queue_name = 1;
}

message DeleteQueueItemResponse {}

service QueueService {
    rpc AddQueue(AddQueueRequest) returns (AddQueueResponse) {};
    rpc AddQueueItem(AddQueueItemRequest) returns (AddQueueItemResponse) {};
    rpc DeleteQueueItem(DeleteQueueItemRequest) returns (DeleteQueueItemResponse) {};
}